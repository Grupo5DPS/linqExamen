#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace linqExamen
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBHistoriasUsuario")]
	public partial class historiasUsuarioDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAntecedentesFamiliares(AntecedentesFamiliares instance);
    partial void UpdateAntecedentesFamiliares(AntecedentesFamiliares instance);
    partial void DeleteAntecedentesFamiliares(AntecedentesFamiliares instance);
    partial void InsertAntecedentesPersonales(AntecedentesPersonales instance);
    partial void UpdateAntecedentesPersonales(AntecedentesPersonales instance);
    partial void DeleteAntecedentesPersonales(AntecedentesPersonales instance);
    partial void InsertAntecedentesQuirurjicos(AntecedentesQuirurjicos instance);
    partial void UpdateAntecedentesQuirurjicos(AntecedentesQuirurjicos instance);
    partial void DeleteAntecedentesQuirurjicos(AntecedentesQuirurjicos instance);
    partial void InsertDiagnosticos(Diagnosticos instance);
    partial void UpdateDiagnosticos(Diagnosticos instance);
    partial void DeleteDiagnosticos(Diagnosticos instance);
    partial void InsertDoctor(DoctorHos instance);
    partial void UpdateDoctor(DoctorHos instance);
    partial void DeleteDoctor(DoctorHos instance);
    partial void InsertHistoria(Historia instance);
    partial void UpdateHistoria(Historia instance);
    partial void DeleteHistoria(Historia instance);
    partial void InsertPaciente(Paciente instance);
    partial void UpdatePaciente(Paciente instance);
    partial void DeletePaciente(Paciente instance);
    partial void InsertHospital(Hospital instance);
    partial void UpdateHospital(Hospital instance);
    partial void DeleteHospital(Hospital instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    #endregion
		
		public historiasUsuarioDataContext() : 
				base(global::linqExamen.Properties.Settings.Default.DBHistoriasUsuarioConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public historiasUsuarioDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public historiasUsuarioDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public historiasUsuarioDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public historiasUsuarioDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AntecedentesFamiliares> AntecedentesFamiliares
		{
			get
			{
				return this.GetTable<AntecedentesFamiliares>();
			}
		}
		
		public System.Data.Linq.Table<AntecedentesPersonales> AntecedentesPersonales
		{
			get
			{
				return this.GetTable<AntecedentesPersonales>();
			}
		}
		
		public System.Data.Linq.Table<AntecedentesQuirurjicos> AntecedentesQuirurjicos
		{
			get
			{
				return this.GetTable<AntecedentesQuirurjicos>();
			}
		}
		
		public System.Data.Linq.Table<Diagnosticos> Diagnosticos
		{
			get
			{
				return this.GetTable<Diagnosticos>();
			}
		}
		
		public System.Data.Linq.Table<DoctorHos> Doctor
		{
			get
			{
				return this.GetTable<DoctorHos>();
			}
		}
		
		public System.Data.Linq.Table<Historia> Historia
		{
			get
			{
				return this.GetTable<Historia>();
			}
		}
		
		public System.Data.Linq.Table<Paciente> Paciente
		{
			get
			{
				return this.GetTable<Paciente>();
			}
		}
		
		public System.Data.Linq.Table<Hospital> Hospital
		{
			get
			{
				return this.GetTable<Hospital>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAntecedentesFamiliares")]
	public partial class AntecedentesFamiliares : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idAntecedenteF;
		
		private string _diabetes;
		
		private string _cancer;
		
		private string _tuberculosis;
		
		private string _ipertension;
		
		private string _sida;
		
		private string _covid;
		
		private string _otrasEnfermedades;
		
		private EntitySet<Historia> _Historia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAntecedenteFChanging(string value);
    partial void OnidAntecedenteFChanged();
    partial void OndiabetesChanging(string value);
    partial void OndiabetesChanged();
    partial void OncancerChanging(string value);
    partial void OncancerChanged();
    partial void OntuberculosisChanging(string value);
    partial void OntuberculosisChanged();
    partial void OnipertensionChanging(string value);
    partial void OnipertensionChanged();
    partial void OnsidaChanging(string value);
    partial void OnsidaChanged();
    partial void OncovidChanging(string value);
    partial void OncovidChanged();
    partial void OnotrasEnfermedadesChanging(string value);
    partial void OnotrasEnfermedadesChanged();
    #endregion
		
		public AntecedentesFamiliares()
		{
			this._Historia = new EntitySet<Historia>(new Action<Historia>(this.attach_Historia), new Action<Historia>(this.detach_Historia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAntecedenteF", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idAntecedenteF
		{
			get
			{
				return this._idAntecedenteF;
			}
			set
			{
				if ((this._idAntecedenteF != value))
				{
					this.OnidAntecedenteFChanging(value);
					this.SendPropertyChanging();
					this._idAntecedenteF = value;
					this.SendPropertyChanged("idAntecedenteF");
					this.OnidAntecedenteFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diabetes", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string diabetes
		{
			get
			{
				return this._diabetes;
			}
			set
			{
				if ((this._diabetes != value))
				{
					this.OndiabetesChanging(value);
					this.SendPropertyChanging();
					this._diabetes = value;
					this.SendPropertyChanged("diabetes");
					this.OndiabetesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancer", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string cancer
		{
			get
			{
				return this._cancer;
			}
			set
			{
				if ((this._cancer != value))
				{
					this.OncancerChanging(value);
					this.SendPropertyChanging();
					this._cancer = value;
					this.SendPropertyChanged("cancer");
					this.OncancerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tuberculosis", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string tuberculosis
		{
			get
			{
				return this._tuberculosis;
			}
			set
			{
				if ((this._tuberculosis != value))
				{
					this.OntuberculosisChanging(value);
					this.SendPropertyChanging();
					this._tuberculosis = value;
					this.SendPropertyChanged("tuberculosis");
					this.OntuberculosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipertension", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string ipertension
		{
			get
			{
				return this._ipertension;
			}
			set
			{
				if ((this._ipertension != value))
				{
					this.OnipertensionChanging(value);
					this.SendPropertyChanging();
					this._ipertension = value;
					this.SendPropertyChanged("ipertension");
					this.OnipertensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sida", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string sida
		{
			get
			{
				return this._sida;
			}
			set
			{
				if ((this._sida != value))
				{
					this.OnsidaChanging(value);
					this.SendPropertyChanging();
					this._sida = value;
					this.SendPropertyChanged("sida");
					this.OnsidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_covid", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string covid
		{
			get
			{
				return this._covid;
			}
			set
			{
				if ((this._covid != value))
				{
					this.OncovidChanging(value);
					this.SendPropertyChanging();
					this._covid = value;
					this.SendPropertyChanged("covid");
					this.OncovidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otrasEnfermedades", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string otrasEnfermedades
		{
			get
			{
				return this._otrasEnfermedades;
			}
			set
			{
				if ((this._otrasEnfermedades != value))
				{
					this.OnotrasEnfermedadesChanging(value);
					this.SendPropertyChanging();
					this._otrasEnfermedades = value;
					this.SendPropertyChanged("otrasEnfermedades");
					this.OnotrasEnfermedadesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAntecedentesFamiliares_THistoria", Storage="_Historia", ThisKey="idAntecedenteF", OtherKey="idAntecedenteF")]
		public EntitySet<Historia> Historia
		{
			get
			{
				return this._Historia;
			}
			set
			{
				this._Historia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Historia(Historia entity)
		{
			this.SendPropertyChanging();
			entity.AntecedentesFamiliares = this;
		}
		
		private void detach_Historia(Historia entity)
		{
			this.SendPropertyChanging();
			entity.AntecedentesFamiliares = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAntecedentesPersonales")]
	public partial class AntecedentesPersonales : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idAntecedenteP;
		
		private string _relacionesSexuales;
		
		private string _edadSexInicio;
		
		private string _sexFrecuencia;
		
		private string _nroParejas;
		
		private string _usasProteccion;
		
		private string _vacunaSarampion;
		
		private string _vacunaViruela;
		
		private string _vacunaRabia;
		
		private string _vacunaFiebreA;
		
		private string _vacunaHepatitis;
		
		private string _otrasVacunas;
		
		private EntitySet<Historia> _Historia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAntecedentePChanging(string value);
    partial void OnidAntecedentePChanged();
    partial void OnrelacionesSexualesChanging(string value);
    partial void OnrelacionesSexualesChanged();
    partial void OnedadSexInicioChanging(string value);
    partial void OnedadSexInicioChanged();
    partial void OnsexFrecuenciaChanging(string value);
    partial void OnsexFrecuenciaChanged();
    partial void OnnroParejasChanging(string value);
    partial void OnnroParejasChanged();
    partial void OnusasProteccionChanging(string value);
    partial void OnusasProteccionChanged();
    partial void OnvacunaSarampionChanging(string value);
    partial void OnvacunaSarampionChanged();
    partial void OnvacunaViruelaChanging(string value);
    partial void OnvacunaViruelaChanged();
    partial void OnvacunaRabiaChanging(string value);
    partial void OnvacunaRabiaChanged();
    partial void OnvacunaFiebreAChanging(string value);
    partial void OnvacunaFiebreAChanged();
    partial void OnvacunaHepatitisChanging(string value);
    partial void OnvacunaHepatitisChanged();
    partial void OnotrasVacunasChanging(string value);
    partial void OnotrasVacunasChanged();
    #endregion
		
		public AntecedentesPersonales()
		{
			this._Historia = new EntitySet<Historia>(new Action<Historia>(this.attach_Historia), new Action<Historia>(this.detach_Historia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAntecedenteP", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idAntecedenteP
		{
			get
			{
				return this._idAntecedenteP;
			}
			set
			{
				if ((this._idAntecedenteP != value))
				{
					this.OnidAntecedentePChanging(value);
					this.SendPropertyChanging();
					this._idAntecedenteP = value;
					this.SendPropertyChanged("idAntecedenteP");
					this.OnidAntecedentePChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relacionesSexuales", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string relacionesSexuales
		{
			get
			{
				return this._relacionesSexuales;
			}
			set
			{
				if ((this._relacionesSexuales != value))
				{
					this.OnrelacionesSexualesChanging(value);
					this.SendPropertyChanging();
					this._relacionesSexuales = value;
					this.SendPropertyChanged("relacionesSexuales");
					this.OnrelacionesSexualesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edadSexInicio", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string edadSexInicio
		{
			get
			{
				return this._edadSexInicio;
			}
			set
			{
				if ((this._edadSexInicio != value))
				{
					this.OnedadSexInicioChanging(value);
					this.SendPropertyChanging();
					this._edadSexInicio = value;
					this.SendPropertyChanged("edadSexInicio");
					this.OnedadSexInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sexFrecuencia", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string sexFrecuencia
		{
			get
			{
				return this._sexFrecuencia;
			}
			set
			{
				if ((this._sexFrecuencia != value))
				{
					this.OnsexFrecuenciaChanging(value);
					this.SendPropertyChanging();
					this._sexFrecuencia = value;
					this.SendPropertyChanged("sexFrecuencia");
					this.OnsexFrecuenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nroParejas", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nroParejas
		{
			get
			{
				return this._nroParejas;
			}
			set
			{
				if ((this._nroParejas != value))
				{
					this.OnnroParejasChanging(value);
					this.SendPropertyChanging();
					this._nroParejas = value;
					this.SendPropertyChanged("nroParejas");
					this.OnnroParejasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usasProteccion", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string usasProteccion
		{
			get
			{
				return this._usasProteccion;
			}
			set
			{
				if ((this._usasProteccion != value))
				{
					this.OnusasProteccionChanging(value);
					this.SendPropertyChanging();
					this._usasProteccion = value;
					this.SendPropertyChanged("usasProteccion");
					this.OnusasProteccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vacunaSarampion", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string vacunaSarampion
		{
			get
			{
				return this._vacunaSarampion;
			}
			set
			{
				if ((this._vacunaSarampion != value))
				{
					this.OnvacunaSarampionChanging(value);
					this.SendPropertyChanging();
					this._vacunaSarampion = value;
					this.SendPropertyChanged("vacunaSarampion");
					this.OnvacunaSarampionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vacunaViruela", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string vacunaViruela
		{
			get
			{
				return this._vacunaViruela;
			}
			set
			{
				if ((this._vacunaViruela != value))
				{
					this.OnvacunaViruelaChanging(value);
					this.SendPropertyChanging();
					this._vacunaViruela = value;
					this.SendPropertyChanged("vacunaViruela");
					this.OnvacunaViruelaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vacunaRabia", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string vacunaRabia
		{
			get
			{
				return this._vacunaRabia;
			}
			set
			{
				if ((this._vacunaRabia != value))
				{
					this.OnvacunaRabiaChanging(value);
					this.SendPropertyChanging();
					this._vacunaRabia = value;
					this.SendPropertyChanged("vacunaRabia");
					this.OnvacunaRabiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vacunaFiebreA", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string vacunaFiebreA
		{
			get
			{
				return this._vacunaFiebreA;
			}
			set
			{
				if ((this._vacunaFiebreA != value))
				{
					this.OnvacunaFiebreAChanging(value);
					this.SendPropertyChanging();
					this._vacunaFiebreA = value;
					this.SendPropertyChanged("vacunaFiebreA");
					this.OnvacunaFiebreAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vacunaHepatitis", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string vacunaHepatitis
		{
			get
			{
				return this._vacunaHepatitis;
			}
			set
			{
				if ((this._vacunaHepatitis != value))
				{
					this.OnvacunaHepatitisChanging(value);
					this.SendPropertyChanging();
					this._vacunaHepatitis = value;
					this.SendPropertyChanged("vacunaHepatitis");
					this.OnvacunaHepatitisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otrasVacunas", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string otrasVacunas
		{
			get
			{
				return this._otrasVacunas;
			}
			set
			{
				if ((this._otrasVacunas != value))
				{
					this.OnotrasVacunasChanging(value);
					this.SendPropertyChanging();
					this._otrasVacunas = value;
					this.SendPropertyChanged("otrasVacunas");
					this.OnotrasVacunasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAntecedentesPersonales_THistoria", Storage="_Historia", ThisKey="idAntecedenteP", OtherKey="idAntecedenteP")]
		public EntitySet<Historia> Historia
		{
			get
			{
				return this._Historia;
			}
			set
			{
				this._Historia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Historia(Historia entity)
		{
			this.SendPropertyChanging();
			entity.AntecedentesPersonales = this;
		}
		
		private void detach_Historia(Historia entity)
		{
			this.SendPropertyChanging();
			entity.AntecedentesPersonales = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAntecedentesQuirurjicos")]
	public partial class AntecedentesQuirurjicos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idAntecedenteQ;
		
		private string _tuvoIntervencion;
		
		private string _nroVeces;
		
		private string _causaOperacion;
		
		private string _alergias;
		
		private string _queAlergias;
		
		private string _sufreDiabetes;
		
		private string _sufreEpilepsia;
		
		private string _sufreHipertension;
		
		private string _otrasEnfermedades;
		
		private string _medicamentos;
		
		private string _queMedicamentos;
		
		private EntitySet<Historia> _Historia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAntecedenteQChanging(string value);
    partial void OnidAntecedenteQChanged();
    partial void OntuvoIntervencionChanging(string value);
    partial void OntuvoIntervencionChanged();
    partial void OnnroVecesChanging(string value);
    partial void OnnroVecesChanged();
    partial void OncausaOperacionChanging(string value);
    partial void OncausaOperacionChanged();
    partial void OnalergiasChanging(string value);
    partial void OnalergiasChanged();
    partial void OnqueAlergiasChanging(string value);
    partial void OnqueAlergiasChanged();
    partial void OnsufreDiabetesChanging(string value);
    partial void OnsufreDiabetesChanged();
    partial void OnsufreEpilepsiaChanging(string value);
    partial void OnsufreEpilepsiaChanged();
    partial void OnsufreHipertensionChanging(string value);
    partial void OnsufreHipertensionChanged();
    partial void OnotrasEnfermedadesChanging(string value);
    partial void OnotrasEnfermedadesChanged();
    partial void OnmedicamentosChanging(string value);
    partial void OnmedicamentosChanged();
    partial void OnqueMedicamentosChanging(string value);
    partial void OnqueMedicamentosChanged();
    #endregion
		
		public AntecedentesQuirurjicos()
		{
			this._Historia = new EntitySet<Historia>(new Action<Historia>(this.attach_Historia), new Action<Historia>(this.detach_Historia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAntecedenteQ", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idAntecedenteQ
		{
			get
			{
				return this._idAntecedenteQ;
			}
			set
			{
				if ((this._idAntecedenteQ != value))
				{
					this.OnidAntecedenteQChanging(value);
					this.SendPropertyChanging();
					this._idAntecedenteQ = value;
					this.SendPropertyChanged("idAntecedenteQ");
					this.OnidAntecedenteQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tuvoIntervencion", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string tuvoIntervencion
		{
			get
			{
				return this._tuvoIntervencion;
			}
			set
			{
				if ((this._tuvoIntervencion != value))
				{
					this.OntuvoIntervencionChanging(value);
					this.SendPropertyChanging();
					this._tuvoIntervencion = value;
					this.SendPropertyChanged("tuvoIntervencion");
					this.OntuvoIntervencionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nroVeces", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nroVeces
		{
			get
			{
				return this._nroVeces;
			}
			set
			{
				if ((this._nroVeces != value))
				{
					this.OnnroVecesChanging(value);
					this.SendPropertyChanging();
					this._nroVeces = value;
					this.SendPropertyChanged("nroVeces");
					this.OnnroVecesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_causaOperacion", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string causaOperacion
		{
			get
			{
				return this._causaOperacion;
			}
			set
			{
				if ((this._causaOperacion != value))
				{
					this.OncausaOperacionChanging(value);
					this.SendPropertyChanging();
					this._causaOperacion = value;
					this.SendPropertyChanged("causaOperacion");
					this.OncausaOperacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alergias", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string alergias
		{
			get
			{
				return this._alergias;
			}
			set
			{
				if ((this._alergias != value))
				{
					this.OnalergiasChanging(value);
					this.SendPropertyChanging();
					this._alergias = value;
					this.SendPropertyChanged("alergias");
					this.OnalergiasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_queAlergias", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string queAlergias
		{
			get
			{
				return this._queAlergias;
			}
			set
			{
				if ((this._queAlergias != value))
				{
					this.OnqueAlergiasChanging(value);
					this.SendPropertyChanging();
					this._queAlergias = value;
					this.SendPropertyChanged("queAlergias");
					this.OnqueAlergiasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sufreDiabetes", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string sufreDiabetes
		{
			get
			{
				return this._sufreDiabetes;
			}
			set
			{
				if ((this._sufreDiabetes != value))
				{
					this.OnsufreDiabetesChanging(value);
					this.SendPropertyChanging();
					this._sufreDiabetes = value;
					this.SendPropertyChanged("sufreDiabetes");
					this.OnsufreDiabetesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sufreEpilepsia", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string sufreEpilepsia
		{
			get
			{
				return this._sufreEpilepsia;
			}
			set
			{
				if ((this._sufreEpilepsia != value))
				{
					this.OnsufreEpilepsiaChanging(value);
					this.SendPropertyChanging();
					this._sufreEpilepsia = value;
					this.SendPropertyChanged("sufreEpilepsia");
					this.OnsufreEpilepsiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sufreHipertension", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string sufreHipertension
		{
			get
			{
				return this._sufreHipertension;
			}
			set
			{
				if ((this._sufreHipertension != value))
				{
					this.OnsufreHipertensionChanging(value);
					this.SendPropertyChanging();
					this._sufreHipertension = value;
					this.SendPropertyChanged("sufreHipertension");
					this.OnsufreHipertensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otrasEnfermedades", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string otrasEnfermedades
		{
			get
			{
				return this._otrasEnfermedades;
			}
			set
			{
				if ((this._otrasEnfermedades != value))
				{
					this.OnotrasEnfermedadesChanging(value);
					this.SendPropertyChanging();
					this._otrasEnfermedades = value;
					this.SendPropertyChanged("otrasEnfermedades");
					this.OnotrasEnfermedadesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medicamentos", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string medicamentos
		{
			get
			{
				return this._medicamentos;
			}
			set
			{
				if ((this._medicamentos != value))
				{
					this.OnmedicamentosChanging(value);
					this.SendPropertyChanging();
					this._medicamentos = value;
					this.SendPropertyChanged("medicamentos");
					this.OnmedicamentosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_queMedicamentos", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string queMedicamentos
		{
			get
			{
				return this._queMedicamentos;
			}
			set
			{
				if ((this._queMedicamentos != value))
				{
					this.OnqueMedicamentosChanging(value);
					this.SendPropertyChanging();
					this._queMedicamentos = value;
					this.SendPropertyChanged("queMedicamentos");
					this.OnqueMedicamentosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAntecedentesQuirurjicos_THistoria", Storage="_Historia", ThisKey="idAntecedenteQ", OtherKey="idAntecedenteQ")]
		public EntitySet<Historia> Historia
		{
			get
			{
				return this._Historia;
			}
			set
			{
				this._Historia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Historia(Historia entity)
		{
			this.SendPropertyChanging();
			entity.AntecedentesQuirurjicos = this;
		}
		
		private void detach_Historia(Historia entity)
		{
			this.SendPropertyChanging();
			entity.AntecedentesQuirurjicos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TDiagnosticos")]
	public partial class Diagnosticos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codDiagnostico;
		
		private string _descripcion;
		
		private EntitySet<Historia> _Historia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodDiagnosticoChanging(string value);
    partial void OncodDiagnosticoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public Diagnosticos()
		{
			this._Historia = new EntitySet<Historia>(new Action<Historia>(this.attach_Historia), new Action<Historia>(this.detach_Historia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codDiagnostico", DbType="Char(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codDiagnostico
		{
			get
			{
				return this._codDiagnostico;
			}
			set
			{
				if ((this._codDiagnostico != value))
				{
					this.OncodDiagnosticoChanging(value);
					this.SendPropertyChanging();
					this._codDiagnostico = value;
					this.SendPropertyChanged("codDiagnostico");
					this.OncodDiagnosticoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TDiagnosticos_THistoria", Storage="_Historia", ThisKey="codDiagnostico", OtherKey="codDiagnostico")]
		public EntitySet<Historia> Historia
		{
			get
			{
				return this._Historia;
			}
			set
			{
				this._Historia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Historia(Historia entity)
		{
			this.SendPropertyChanging();
			entity.Diagnosticos = this;
		}
		
		private void detach_Historia(Historia entity)
		{
			this.SendPropertyChanging();
			entity.Diagnosticos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TDoctor")]
	public partial class DoctorHos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idDoctor;
		
		private string _nombre;
		
		private string _apellidoPaterno;
		
		private string _apellidoMaterno;
		
		private string _Especialidad;
		
		private string _direccion;
		
		private string _telefono;
		
		private string _idHospital;
		
		private EntitySet<Historia> _Historia;
		
		private EntityRef<Hospital> _Hospital;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDoctorChanging(string value);
    partial void OnidDoctorChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoPaternoChanging(string value);
    partial void OnapellidoPaternoChanged();
    partial void OnapellidoMaternoChanging(string value);
    partial void OnapellidoMaternoChanged();
    partial void OnEspecialidadChanging(string value);
    partial void OnEspecialidadChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OnidHospitalChanging(string value);
    partial void OnidHospitalChanged();
    #endregion
		
		public DoctorHos()
		{
			this._Historia = new EntitySet<Historia>(new Action<Historia>(this.attach_Historia), new Action<Historia>(this.detach_Historia));
			this._Hospital = default(EntityRef<Hospital>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDoctor", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idDoctor
		{
			get
			{
				return this._idDoctor;
			}
			set
			{
				if ((this._idDoctor != value))
				{
					this.OnidDoctorChanging(value);
					this.SendPropertyChanging();
					this._idDoctor = value;
					this.SendPropertyChanged("idDoctor");
					this.OnidDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellidoPaterno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string apellidoPaterno
		{
			get
			{
				return this._apellidoPaterno;
			}
			set
			{
				if ((this._apellidoPaterno != value))
				{
					this.OnapellidoPaternoChanging(value);
					this.SendPropertyChanging();
					this._apellidoPaterno = value;
					this.SendPropertyChanged("apellidoPaterno");
					this.OnapellidoPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellidoMaterno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string apellidoMaterno
		{
			get
			{
				return this._apellidoMaterno;
			}
			set
			{
				if ((this._apellidoMaterno != value))
				{
					this.OnapellidoMaternoChanging(value);
					this.SendPropertyChanging();
					this._apellidoMaterno = value;
					this.SendPropertyChanged("apellidoMaterno");
					this.OnapellidoMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this.OnEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._Especialidad = value;
					this.SendPropertyChanged("Especialidad");
					this.OnEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHospital", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string idHospital
		{
			get
			{
				return this._idHospital;
			}
			set
			{
				if ((this._idHospital != value))
				{
					if (this._Hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidHospitalChanging(value);
					this.SendPropertyChanging();
					this._idHospital = value;
					this.SendPropertyChanged("idHospital");
					this.OnidHospitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TDoctor_THistoria", Storage="_Historia", ThisKey="idDoctor", OtherKey="idDoctor")]
		public EntitySet<Historia> Historia
		{
			get
			{
				return this._Historia;
			}
			set
			{
				this._Historia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THospital_TDoctor", Storage="_Hospital", ThisKey="idHospital", OtherKey="idHospital", IsForeignKey=true)]
		public Hospital Hospital
		{
			get
			{
				return this._Hospital.Entity;
			}
			set
			{
				Hospital previousValue = this._Hospital.Entity;
				if (((previousValue != value) 
							|| (this._Hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hospital.Entity = null;
						previousValue.Doctor.Remove(this);
					}
					this._Hospital.Entity = value;
					if ((value != null))
					{
						value.Doctor.Add(this);
						this._idHospital = value.idHospital;
					}
					else
					{
						this._idHospital = default(string);
					}
					this.SendPropertyChanged("Hospital");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Historia(Historia entity)
		{
			this.SendPropertyChanging();
			entity.Doctor = this;
		}
		
		private void detach_Historia(Historia entity)
		{
			this.SendPropertyChanging();
			entity.Doctor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THistoria")]
	public partial class Historia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idHistoria;
		
		private string _peso;
		
		private string _talla;
		
		private string _motivoConsulta;
		
		private string _sintomas;
		
		private string _adicciones;
		
		private string _idPaciente;
		
		private string _idDoctor;
		
		private string _idUsuario;
		
		private string _idHospital;
		
		private string _idAntecedenteP;
		
		private string _idAntecedenteF;
		
		private string _idAntecedenteQ;
		
		private string _codDiagnostico;
		
		private System.DateTime _fechaRegistro;
		
		private EntityRef<AntecedentesFamiliares> _AntecedentesFamiliares;
		
		private EntityRef<AntecedentesPersonales> _AntecedentesPersonales;
		
		private EntityRef<AntecedentesQuirurjicos> _AntecedentesQuirurjicos;
		
		private EntityRef<Diagnosticos> _Diagnosticos;
		
		private EntityRef<DoctorHos> _Doctor;
		
		private EntityRef<Paciente> _Paciente;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidHistoriaChanging(string value);
    partial void OnidHistoriaChanged();
    partial void OnpesoChanging(string value);
    partial void OnpesoChanged();
    partial void OntallaChanging(string value);
    partial void OntallaChanged();
    partial void OnmotivoConsultaChanging(string value);
    partial void OnmotivoConsultaChanged();
    partial void OnsintomasChanging(string value);
    partial void OnsintomasChanged();
    partial void OnadiccionesChanging(string value);
    partial void OnadiccionesChanged();
    partial void OnidPacienteChanging(string value);
    partial void OnidPacienteChanged();
    partial void OnidDoctorChanging(string value);
    partial void OnidDoctorChanged();
    partial void OnidUsuarioChanging(string value);
    partial void OnidUsuarioChanged();
    partial void OnidHospitalChanging(string value);
    partial void OnidHospitalChanged();
    partial void OnidAntecedentePChanging(string value);
    partial void OnidAntecedentePChanged();
    partial void OnidAntecedenteFChanging(string value);
    partial void OnidAntecedenteFChanged();
    partial void OnidAntecedenteQChanging(string value);
    partial void OnidAntecedenteQChanged();
    partial void OncodDiagnosticoChanging(string value);
    partial void OncodDiagnosticoChanged();
    partial void OnfechaRegistroChanging(System.DateTime value);
    partial void OnfechaRegistroChanged();
    #endregion
		
		public Historia()
		{
			this._AntecedentesFamiliares = default(EntityRef<AntecedentesFamiliares>);
			this._AntecedentesPersonales = default(EntityRef<AntecedentesPersonales>);
			this._AntecedentesQuirurjicos = default(EntityRef<AntecedentesQuirurjicos>);
			this._Diagnosticos = default(EntityRef<Diagnosticos>);
			this._Doctor = default(EntityRef<DoctorHos>);
			this._Paciente = default(EntityRef<Paciente>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHistoria", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idHistoria
		{
			get
			{
				return this._idHistoria;
			}
			set
			{
				if ((this._idHistoria != value))
				{
					this.OnidHistoriaChanging(value);
					this.SendPropertyChanging();
					this._idHistoria = value;
					this.SendPropertyChanged("idHistoria");
					this.OnidHistoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_peso", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string peso
		{
			get
			{
				return this._peso;
			}
			set
			{
				if ((this._peso != value))
				{
					this.OnpesoChanging(value);
					this.SendPropertyChanging();
					this._peso = value;
					this.SendPropertyChanged("peso");
					this.OnpesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_talla", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string talla
		{
			get
			{
				return this._talla;
			}
			set
			{
				if ((this._talla != value))
				{
					this.OntallaChanging(value);
					this.SendPropertyChanging();
					this._talla = value;
					this.SendPropertyChanged("talla");
					this.OntallaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motivoConsulta", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string motivoConsulta
		{
			get
			{
				return this._motivoConsulta;
			}
			set
			{
				if ((this._motivoConsulta != value))
				{
					this.OnmotivoConsultaChanging(value);
					this.SendPropertyChanging();
					this._motivoConsulta = value;
					this.SendPropertyChanged("motivoConsulta");
					this.OnmotivoConsultaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintomas", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sintomas
		{
			get
			{
				return this._sintomas;
			}
			set
			{
				if ((this._sintomas != value))
				{
					this.OnsintomasChanging(value);
					this.SendPropertyChanging();
					this._sintomas = value;
					this.SendPropertyChanged("sintomas");
					this.OnsintomasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adicciones", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string adicciones
		{
			get
			{
				return this._adicciones;
			}
			set
			{
				if ((this._adicciones != value))
				{
					this.OnadiccionesChanging(value);
					this.SendPropertyChanging();
					this._adicciones = value;
					this.SendPropertyChanged("adicciones");
					this.OnadiccionesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPaciente", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string idPaciente
		{
			get
			{
				return this._idPaciente;
			}
			set
			{
				if ((this._idPaciente != value))
				{
					if (this._Paciente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPacienteChanging(value);
					this.SendPropertyChanging();
					this._idPaciente = value;
					this.SendPropertyChanged("idPaciente");
					this.OnidPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDoctor", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string idDoctor
		{
			get
			{
				return this._idDoctor;
			}
			set
			{
				if ((this._idDoctor != value))
				{
					if (this._Doctor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDoctorChanging(value);
					this.SendPropertyChanging();
					this._idDoctor = value;
					this.SendPropertyChanged("idDoctor");
					this.OnidDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHospital", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string idHospital
		{
			get
			{
				return this._idHospital;
			}
			set
			{
				if ((this._idHospital != value))
				{
					this.OnidHospitalChanging(value);
					this.SendPropertyChanging();
					this._idHospital = value;
					this.SendPropertyChanged("idHospital");
					this.OnidHospitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAntecedenteP", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string idAntecedenteP
		{
			get
			{
				return this._idAntecedenteP;
			}
			set
			{
				if ((this._idAntecedenteP != value))
				{
					if (this._AntecedentesPersonales.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAntecedentePChanging(value);
					this.SendPropertyChanging();
					this._idAntecedenteP = value;
					this.SendPropertyChanged("idAntecedenteP");
					this.OnidAntecedentePChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAntecedenteF", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string idAntecedenteF
		{
			get
			{
				return this._idAntecedenteF;
			}
			set
			{
				if ((this._idAntecedenteF != value))
				{
					if (this._AntecedentesFamiliares.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAntecedenteFChanging(value);
					this.SendPropertyChanging();
					this._idAntecedenteF = value;
					this.SendPropertyChanged("idAntecedenteF");
					this.OnidAntecedenteFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAntecedenteQ", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string idAntecedenteQ
		{
			get
			{
				return this._idAntecedenteQ;
			}
			set
			{
				if ((this._idAntecedenteQ != value))
				{
					if (this._AntecedentesQuirurjicos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAntecedenteQChanging(value);
					this.SendPropertyChanging();
					this._idAntecedenteQ = value;
					this.SendPropertyChanged("idAntecedenteQ");
					this.OnidAntecedenteQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codDiagnostico", DbType="Char(8) NOT NULL", CanBeNull=false)]
		public string codDiagnostico
		{
			get
			{
				return this._codDiagnostico;
			}
			set
			{
				if ((this._codDiagnostico != value))
				{
					if (this._Diagnosticos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodDiagnosticoChanging(value);
					this.SendPropertyChanging();
					this._codDiagnostico = value;
					this.SendPropertyChanged("codDiagnostico");
					this.OncodDiagnosticoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaRegistro", DbType="Date NOT NULL")]
		public System.DateTime fechaRegistro
		{
			get
			{
				return this._fechaRegistro;
			}
			set
			{
				if ((this._fechaRegistro != value))
				{
					this.OnfechaRegistroChanging(value);
					this.SendPropertyChanging();
					this._fechaRegistro = value;
					this.SendPropertyChanged("fechaRegistro");
					this.OnfechaRegistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAntecedentesFamiliares_THistoria", Storage="_AntecedentesFamiliares", ThisKey="idAntecedenteF", OtherKey="idAntecedenteF", IsForeignKey=true)]
		public AntecedentesFamiliares AntecedentesFamiliares
		{
			get
			{
				return this._AntecedentesFamiliares.Entity;
			}
			set
			{
				AntecedentesFamiliares previousValue = this._AntecedentesFamiliares.Entity;
				if (((previousValue != value) 
							|| (this._AntecedentesFamiliares.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AntecedentesFamiliares.Entity = null;
						previousValue.Historia.Remove(this);
					}
					this._AntecedentesFamiliares.Entity = value;
					if ((value != null))
					{
						value.Historia.Add(this);
						this._idAntecedenteF = value.idAntecedenteF;
					}
					else
					{
						this._idAntecedenteF = default(string);
					}
					this.SendPropertyChanged("AntecedentesFamiliares");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAntecedentesPersonales_THistoria", Storage="_AntecedentesPersonales", ThisKey="idAntecedenteP", OtherKey="idAntecedenteP", IsForeignKey=true)]
		public AntecedentesPersonales AntecedentesPersonales
		{
			get
			{
				return this._AntecedentesPersonales.Entity;
			}
			set
			{
				AntecedentesPersonales previousValue = this._AntecedentesPersonales.Entity;
				if (((previousValue != value) 
							|| (this._AntecedentesPersonales.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AntecedentesPersonales.Entity = null;
						previousValue.Historia.Remove(this);
					}
					this._AntecedentesPersonales.Entity = value;
					if ((value != null))
					{
						value.Historia.Add(this);
						this._idAntecedenteP = value.idAntecedenteP;
					}
					else
					{
						this._idAntecedenteP = default(string);
					}
					this.SendPropertyChanged("AntecedentesPersonales");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAntecedentesQuirurjicos_THistoria", Storage="_AntecedentesQuirurjicos", ThisKey="idAntecedenteQ", OtherKey="idAntecedenteQ", IsForeignKey=true)]
		public AntecedentesQuirurjicos AntecedentesQuirurjicos
		{
			get
			{
				return this._AntecedentesQuirurjicos.Entity;
			}
			set
			{
				AntecedentesQuirurjicos previousValue = this._AntecedentesQuirurjicos.Entity;
				if (((previousValue != value) 
							|| (this._AntecedentesQuirurjicos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AntecedentesQuirurjicos.Entity = null;
						previousValue.Historia.Remove(this);
					}
					this._AntecedentesQuirurjicos.Entity = value;
					if ((value != null))
					{
						value.Historia.Add(this);
						this._idAntecedenteQ = value.idAntecedenteQ;
					}
					else
					{
						this._idAntecedenteQ = default(string);
					}
					this.SendPropertyChanged("AntecedentesQuirurjicos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TDiagnosticos_THistoria", Storage="_Diagnosticos", ThisKey="codDiagnostico", OtherKey="codDiagnostico", IsForeignKey=true)]
		public Diagnosticos Diagnosticos
		{
			get
			{
				return this._Diagnosticos.Entity;
			}
			set
			{
				Diagnosticos previousValue = this._Diagnosticos.Entity;
				if (((previousValue != value) 
							|| (this._Diagnosticos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Diagnosticos.Entity = null;
						previousValue.Historia.Remove(this);
					}
					this._Diagnosticos.Entity = value;
					if ((value != null))
					{
						value.Historia.Add(this);
						this._codDiagnostico = value.codDiagnostico;
					}
					else
					{
						this._codDiagnostico = default(string);
					}
					this.SendPropertyChanged("Diagnosticos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TDoctor_THistoria", Storage="_Doctor", ThisKey="idDoctor", OtherKey="idDoctor", IsForeignKey=true)]
		public DoctorHos Doctor
		{
			get
			{
				return this._Doctor.Entity;
			}
			set
			{
				DoctorHos previousValue = this._Doctor.Entity;
				if (((previousValue != value) 
							|| (this._Doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Doctor.Entity = null;
						previousValue.Historia.Remove(this);
					}
					this._Doctor.Entity = value;
					if ((value != null))
					{
						value.Historia.Add(this);
						this._idDoctor = value.idDoctor;
					}
					else
					{
						this._idDoctor = default(string);
					}
					this.SendPropertyChanged("Doctor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TPaciente_THistoria", Storage="_Paciente", ThisKey="idPaciente", OtherKey="idPaciente", IsForeignKey=true)]
		public Paciente Paciente
		{
			get
			{
				return this._Paciente.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente.Entity;
				if (((previousValue != value) 
							|| (this._Paciente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente.Entity = null;
						previousValue.Historia.Remove(this);
					}
					this._Paciente.Entity = value;
					if ((value != null))
					{
						value.Historia.Add(this);
						this._idPaciente = value.idPaciente;
					}
					else
					{
						this._idPaciente = default(string);
					}
					this.SendPropertyChanged("Paciente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TUsuario_THistoria", Storage="_Usuario", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Historia.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Historia.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(string);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TPaciente")]
	public partial class Paciente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idPaciente;
		
		private string _nombre;
		
		private string _apellidoPaterno;
		
		private string _apellidoMaterno;
		
		private string _dni;
		
		private string _edad;
		
		private string _sexo;
		
		private System.DateTime _fechaNacimiento;
		
		private string _estadoCivil;
		
		private string _ocupacion;
		
		private string _direccion;
		
		private string _telefono;
		
		private System.DateTime _fechaIngreso;
		
		private EntitySet<Historia> _Historia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPacienteChanging(string value);
    partial void OnidPacienteChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoPaternoChanging(string value);
    partial void OnapellidoPaternoChanged();
    partial void OnapellidoMaternoChanging(string value);
    partial void OnapellidoMaternoChanged();
    partial void OndniChanging(string value);
    partial void OndniChanged();
    partial void OnedadChanging(string value);
    partial void OnedadChanged();
    partial void OnsexoChanging(string value);
    partial void OnsexoChanged();
    partial void OnfechaNacimientoChanging(System.DateTime value);
    partial void OnfechaNacimientoChanged();
    partial void OnestadoCivilChanging(string value);
    partial void OnestadoCivilChanged();
    partial void OnocupacionChanging(string value);
    partial void OnocupacionChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OnfechaIngresoChanging(System.DateTime value);
    partial void OnfechaIngresoChanged();
    #endregion
		
		public Paciente()
		{
			this._Historia = new EntitySet<Historia>(new Action<Historia>(this.attach_Historia), new Action<Historia>(this.detach_Historia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPaciente", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idPaciente
		{
			get
			{
				return this._idPaciente;
			}
			set
			{
				if ((this._idPaciente != value))
				{
					this.OnidPacienteChanging(value);
					this.SendPropertyChanging();
					this._idPaciente = value;
					this.SendPropertyChanged("idPaciente");
					this.OnidPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellidoPaterno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string apellidoPaterno
		{
			get
			{
				return this._apellidoPaterno;
			}
			set
			{
				if ((this._apellidoPaterno != value))
				{
					this.OnapellidoPaternoChanging(value);
					this.SendPropertyChanging();
					this._apellidoPaterno = value;
					this.SendPropertyChanged("apellidoPaterno");
					this.OnapellidoPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellidoMaterno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string apellidoMaterno
		{
			get
			{
				return this._apellidoMaterno;
			}
			set
			{
				if ((this._apellidoMaterno != value))
				{
					this.OnapellidoMaternoChanging(value);
					this.SendPropertyChanging();
					this._apellidoMaterno = value;
					this.SendPropertyChanged("apellidoMaterno");
					this.OnapellidoMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dni", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string dni
		{
			get
			{
				return this._dni;
			}
			set
			{
				if ((this._dni != value))
				{
					this.OndniChanging(value);
					this.SendPropertyChanging();
					this._dni = value;
					this.SendPropertyChanged("dni");
					this.OndniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edad", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string edad
		{
			get
			{
				return this._edad;
			}
			set
			{
				if ((this._edad != value))
				{
					this.OnedadChanging(value);
					this.SendPropertyChanging();
					this._edad = value;
					this.SendPropertyChanged("edad");
					this.OnedadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sexo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sexo
		{
			get
			{
				return this._sexo;
			}
			set
			{
				if ((this._sexo != value))
				{
					this.OnsexoChanging(value);
					this.SendPropertyChanging();
					this._sexo = value;
					this.SendPropertyChanged("sexo");
					this.OnsexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaNacimiento", DbType="Date NOT NULL")]
		public System.DateTime fechaNacimiento
		{
			get
			{
				return this._fechaNacimiento;
			}
			set
			{
				if ((this._fechaNacimiento != value))
				{
					this.OnfechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._fechaNacimiento = value;
					this.SendPropertyChanged("fechaNacimiento");
					this.OnfechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estadoCivil", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string estadoCivil
		{
			get
			{
				return this._estadoCivil;
			}
			set
			{
				if ((this._estadoCivil != value))
				{
					this.OnestadoCivilChanging(value);
					this.SendPropertyChanging();
					this._estadoCivil = value;
					this.SendPropertyChanged("estadoCivil");
					this.OnestadoCivilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ocupacion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ocupacion
		{
			get
			{
				return this._ocupacion;
			}
			set
			{
				if ((this._ocupacion != value))
				{
					this.OnocupacionChanging(value);
					this.SendPropertyChanging();
					this._ocupacion = value;
					this.SendPropertyChanged("ocupacion");
					this.OnocupacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaIngreso", DbType="Date NOT NULL")]
		public System.DateTime fechaIngreso
		{
			get
			{
				return this._fechaIngreso;
			}
			set
			{
				if ((this._fechaIngreso != value))
				{
					this.OnfechaIngresoChanging(value);
					this.SendPropertyChanging();
					this._fechaIngreso = value;
					this.SendPropertyChanged("fechaIngreso");
					this.OnfechaIngresoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TPaciente_THistoria", Storage="_Historia", ThisKey="idPaciente", OtherKey="idPaciente")]
		public EntitySet<Historia> Historia
		{
			get
			{
				return this._Historia;
			}
			set
			{
				this._Historia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Historia(Historia entity)
		{
			this.SendPropertyChanging();
			entity.Paciente = this;
		}
		
		private void detach_Historia(Historia entity)
		{
			this.SendPropertyChanging();
			entity.Paciente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THospital")]
	public partial class Hospital : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idHospital;
		
		private string _nombreHospital;
		
		private string _direccion;
		
		private EntitySet<DoctorHos> _Doctor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidHospitalChanging(string value);
    partial void OnidHospitalChanged();
    partial void OnnombreHospitalChanging(string value);
    partial void OnnombreHospitalChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    #endregion
		
		public Hospital()
		{
			this._Doctor = new EntitySet<DoctorHos>(new Action<DoctorHos>(this.attach_Doctor), new Action<DoctorHos>(this.detach_Doctor));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHospital", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idHospital
		{
			get
			{
				return this._idHospital;
			}
			set
			{
				if ((this._idHospital != value))
				{
					this.OnidHospitalChanging(value);
					this.SendPropertyChanging();
					this._idHospital = value;
					this.SendPropertyChanged("idHospital");
					this.OnidHospitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreHospital", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombreHospital
		{
			get
			{
				return this._nombreHospital;
			}
			set
			{
				if ((this._nombreHospital != value))
				{
					this.OnnombreHospitalChanging(value);
					this.SendPropertyChanging();
					this._nombreHospital = value;
					this.SendPropertyChanged("nombreHospital");
					this.OnnombreHospitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THospital_TDoctor", Storage="_Doctor", ThisKey="idHospital", OtherKey="idHospital")]
		public EntitySet<DoctorHos> Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				this._Doctor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Doctor(DoctorHos entity)
		{
			this.SendPropertyChanging();
			entity.Hospital = this;
		}
		
		private void detach_Doctor(DoctorHos entity)
		{
			this.SendPropertyChanging();
			entity.Hospital = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TUsuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idUsuario;
		
		private string _usuario;
		
		private string _contrasenia;
		
		private EntitySet<Historia> _Historia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(string value);
    partial void OnidUsuarioChanged();
    partial void OnusuarioChanging(string value);
    partial void OnusuarioChanged();
    partial void OncontraseniaChanging(string value);
    partial void OncontraseniaChanged();
    #endregion
		
		public Usuario()
		{
			this._Historia = new EntitySet<Historia>(new Action<Historia>(this.attach_Historia), new Action<Historia>(this.detach_Historia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				if ((this._usuario != value))
				{
					this.OnusuarioChanging(value);
					this.SendPropertyChanging();
					this._usuario = value;
					this.SendPropertyChanged("usuario");
					this.OnusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contrasenia", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string contrasenia
		{
			get
			{
				return this._contrasenia;
			}
			set
			{
				if ((this._contrasenia != value))
				{
					this.OncontraseniaChanging(value);
					this.SendPropertyChanging();
					this._contrasenia = value;
					this.SendPropertyChanged("contrasenia");
					this.OncontraseniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TUsuario_THistoria", Storage="_Historia", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<Historia> Historia
		{
			get
			{
				return this._Historia;
			}
			set
			{
				this._Historia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Historia(Historia entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Historia(Historia entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
}
#pragma warning restore 1591
